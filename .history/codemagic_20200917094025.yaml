# Check out https://docs.codemagic.io/yaml/building-a-react-native-app/ for more information
# Please review and update values in curly braces

workflows:
    react-native-android:
        name: React Native App Android
        environment:
            vars:
                FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmZZT1RfM1VjWTYxNnJKX1NzYVRzUWdVMm9oRFJ5SWVNVFN1eGxXNXh4dlVfbmhBTzY3TmYzLWJxbFY5Vi01MGVvUDFNckF2dk5ITEZFSjA4ZEdYQTZILXctTXp0eHc5dUJfbmIwSHdnb2lnb1hvYWp4d0U5SjdXMGRXbUMtQkJlZ1M2Si04RDhzOXM2bTFDX3B1MDFlZ0FtM05iLUR6Wjd5ZGJzbzNsNmRRQm9GOVgxRFA5REVYWXZiVXgyNklTenZHMHpCVGtuTVRMaHVxdEk2TkNtNDU0NEVvUT09)
                CM_KEYSTORE: Encrypted(Z0FBQUFBQmZTVkVWUnRCbWU5Q2Z5aW04YTBJU1pCUzFYNVRYYktRSzZDanJUZmxxeEM3SEZJd2tPSzVDT3cyclpQcjhtOU9jZ09peWNwYXh1TjA3Smk2ZjFuekg4eXI2WDBqX1VwN0NZU214N2xDekxhMjhXUzBzOTN6OFlqQWtjejR3Qm5fN0FJd3pUWnBhUnczaWt3bXJ4andXVGFielNvUTRQT2tCODNKZkZLUEppLU5JZk5tWTg4NW1wZmQ4LVY1VVM4eDJzckJENFpjRDNBcllqZlN6UFFBVUhrb21XVVFLblpubjJQeVVwS3pndHprU0NtVzB2ekc5c2ZHQ3NfUmpVUmRlalRyTm16N0l1cFBBcnVBWi1mTDA1RFVfcF9HUVJnT0JHV3lQdzJFLW1FZmVrYTJ1NVV0ZXk5RTExekZZWVRENDB2eEZ5VkFRdnFMWHZyY2lyR1BBbHdpbW11Nk1LYUNyNldGSjM3TFNRM3B1NmhBVlpBZmVFMUtaWTA4c3dqcnNoXzFfa253Ykt1WVU3NVNEVXNIQWFVNEVjSXhIY3pMWlFmOERRWU5QRkpNWWtkWUVhZ0JiRW93QmpmZGEtMHVqMl9saHk1OWhhOXZOS01hVU9qdVV0Y3NQZHpZQWthY1lTYlBYSmlkU3lJMUJ2VTVMMHl5VDFDT0phUUJ5aENWNEZjZlJEcW1IOFN6N0tRUkpDamxhNXlPekxhYTlXc0lqQjM4bVQzc1pUenZTY2UtNnJCUWM3THMzVXhOWjNUQl9tcy1ubWkyVzVaQ2tBaUhGNnY2TEhiTUNuSTZoMmg3SlJ0QVRKWWttbURTeWhVNGhBbUZpemFOS0lOVUk2QlhOdExWSFotRXlMdk1MOVQtSVp1MWdXMXU0MEdpLW45VnFZR1VfbTJwTXBMdmtycW04b3J6UzR5ckZIczZyNUhsa1ZCaXBFbXpnQkZ3VjlDYnpmMDR3R0N0Z0N0VjFBZG1qWlJaLXZmVzRtQVMzdzNQOUJNbVpqQ2VfNnpPcGNVMmxCS29UQXBYb0otRDVhUGRhMXBkZGVZNkNBOC13QmNKd21ucFdhSWR1aUh0R0FhRzRRSGE4M2h4cnFaRHFlT1RxcnFiNjB3QXc3WWU2NHNmZ0ExZVhzdFAtUXo2eW5tdGJIY3JYRzFiSG9lVTBKcDZya0NJRWFncEVwLUV1MnN4RHByaGNrTU9YODRuY0lfTFZtOGxLY0x0VGlRQ2kyYmMySVVnUWpBc2ZzeWs2dEZUaUMydldoWnJpaGdPdUlfV1owX21BbnM1cFMzMno3UG9VV0JiWmtONDA5OUVtNDZOam9tZVN2WHVZRUJMY2xpNVhhMlhVVFR5cEhYVTdlS2RUekpGMDdxc0Fqc1AtbUJSSmpqT2FBSFdieXVNbkJTeC1Fbl9jeUZUc2NzdU1IbURmcHl0SWwzWTRRb2E5RHFvR1VfXzA3VzdJbWdhTkt4dzBoSERoaFI2S1ZmYUVFV3g2MzdrVmZ5R2tRdmNMb1MyWFNRWXd2QWRpQnUtSmNBUHBBV1NlcGl2VUhkVHVJMFU2VnNqSHc3SG01UGZ6Z0tMTDdkVzlTVHB3Y192ZXBiU3AtX0dxMC16THQ2MEtkaUJ5b0o3QjJqZFkwdGwzZTJ6aWtDZnpldV9iMXlyWkFsdUtDTGUtRzNPcGFvaGI4UnVpcFU2alNPVnl0OEs3cm9YQXpuNGduS0I0Rm5QcU9XV29rcXJ3alUxTzg5RkFoMlFPLW9Ka1VQTThVaDhJNVBiNUVHSi1PMlFUcWdRRU9GTlF6ejhVQVFLcnE1NkVLeWlnaVVjREx0NmVhbGhsR2o2UVF2T2hJeWFNbWIzeG9CenN6WjREeFJobklwNVpWdXJqdVdiX3J1RWFnV1Q4aUhFSXZEN2h6MU9KV0wyWXdaNXppV1VGN25EZnpoRExuaGtjSW9uZ0dfZTVEUzN1MFgyOEl2dVFVM1FVRUh6LVFseHBLeFhDZTNieUc0akxhWVRhSWs5dTNTQ3VNM0xIajlEa3RKWURLN20tNXRuSXZmdG9CWXNvVXIwclI1dGdxRUNURlFuV3JRM3dmZmtwRmt2MjdHaVVkd1kwRkQ1VE44ZVB4SFZ5Zzhud1B6VDBDRERISExTdW1rNjFfOXNoNHZpY3ZRX3NKSHBMVmJNd2w1aklfdVQweUM5bklLZEcyVkRyMTBtb0x5QXpfaG9yYzhzVEgxYTNvMVIwZTFUdnpsYVBRTzdhTldLd3lEcWFzcmpjNERTUkMyM2hMeTFtQnB2MTZ0bk5BemEycUl4SDdmVm9xdHAySWlqNVB0Zm5vTHdsejJrcGU1cnhGSDY5dXFCQk5GcFN1LUVGZ0FOY0xkUm5jZVpoREhuUWU1T2VIM1BIUkVQb0JscmNKclF6M082QXZ6TXVVZVNfWHcxbmJlUjIwX0huMy1NN3V0aWxQT2lIU1hZRDdRanZpS19lV1RkQTdvOTBiVURaYVQ1R0JKVHJ1UkIxWFFyc3h3WkFlel80NjlScUg2Zmt4QjJxakhpYlk4MHRwRUljSkJFY01WeFdHWThXbS1DX1JQSGwzMV9hM0hBWmJ4QTVOTFJMaG1NNk04VUxxbDdieXJtSllzSEtLSDZuWlZfblVFMWJhVXRjcWdrYXk0b0xfVjlOMjVBTmlwM1hCYXJjaTV6dGxGMVNoYzliUi1VOGFHWXE0cU03MUl0djZKQWxwTDJ4bTdBdEtwT2l4S3JvQkFpTmE0Xzc0aGktUU0wQnZES0wxdWdsVE1tdUx6d2RPYlZyekpFR00teTZNV3JXVllKWHBPSFd5NDNQb3dBR3lkX014XzZma090NFFKSk05dXFZVzlZOWJ2aS1Ld1FmcTZqcFRkcmVOQmppZlk0ZWhITUI3UUQxRDZQQ0NlOE9KNXNpQnI5b0FmN1VFY2F6eU4zY1pBeUtoWENjWWNaZ29VMGY1MGNhTVcwcVFkaFh5T3B0VHg1a3hsaDlxb2FFWWp4TWNPd084bEE5MnhHeWxSa0xFTW4yMEwwTVJxTEVUbVUybmRFVk1TMWx2VXFkSTFDdkZHYjU3QUV2RWFXWlJWREJ4UzF3WmJRMHRwTWtHN1JkQTNuZEFlNzdXRXBOejFjWTU2ZFBCSW1laVZfU1BJWFp4eFlsbE9MNWRKcFlQOXZHeVVZRzBKc2VsUWJvVWlMUHA2MG1nd0FyQ2NJV2oxSVdidjdPUEtabGItamdHemhsNzZ1TVR3cmJGazJfWGpyRmtqVDlLSVhhdFkteS1FWVRLc3pCWkJTS092QzVDd2lmQ2YzV3BQQWVkM2VDNUZJcjBXUEJULUk2emtzaW9zMGdXX05YbllVZEkwU09rUFlQZVp6R3BKYVpINzZRdGJlVVJHdy1pSHhoSXdEeWdRajNBZjljWjBUZmg0UkpCOXV6aHBYVHd4NlJVUDhFY0E2U0NFUy1aQTRxbi1ndVJLSkxHRHozMnhfdk5aajFWbnJhdmdYdHFfaXJLMmVBS0NsNlA4WnJRdXZEWnRoV19ySDItTEpRZkFjUU1UbllKdV8tVUkzRzUtajdPMURTbWFrQ2piaHVJNlNaZTlQc2xMWExRWmRtbU9KUWQ3WF9jS3JMZEk1Sm9LLXBlRkpOcldDWkhUdDJFaENCaEVjamZJZkpjUlRkLUkzVnJVcU1wRDFSeUxBUkh0UzRiZUwwaUlmaUhQbmFTNWxISm9KcncxSjc1eDJna0lrc2NLVXlQODRYelRqVHd3dGl5aUJPQVg0Q2J5bDd0V1pLWmFuLUUxMmx0b1VDT045NnF6aWVYM2ZQUC1sTXUyUWdMcEdRRHd2OWdFMUFsdHdyWWdlbEVWX3B6dDRoYmZvQTZXS1ZPTGpiS0ZOa0NSVUw4Mk0zdHZQa1Y4cHhMOHlzVERKOWJCOWpxZklBN2g5WnNsWmlpVFRMRzlmR0ZMNFFpVUk1Y0VRQS1yNFUtRkFMUkFBU3JTR0pwb1d3WmxMWkNtTkpPdGM5c2k5bzNSa2V1OUpXZXYyclRFeXNZWElWM25uT1A4cGlQUnR6dFJEcXdCSkhoLW0wSFcyU0hJQjVHTkxUbER1YWluejRHUENLTDJjZ2pnSzZneVhvTk9tbU1hcXhqSXdiLWhQbG1SZmNRa19aYm83Tl85Q3dadFpTeUcyRzhIOEsxNURDZ0FQa3FjdmtOME9NTXh6V3Y5QlFpWDF5Q1hRRURaLVlUZTE4RTFnaTBtNl9iREp6NHNDUWdJcUNwdl9ZSzVYTXlRX1U3WGo5dVFyanU4cUtkR2ZVa1Rjc21HMTR3UU5FOVpIRjBmX1NyT01penlVcmhFLXpJdWV0VFFLWnFrVHpHUERHeXRnMExLMFF1SGFLNWZCc19NTHlMU3lTREpVT3lnbGhzcTBDM0Fqa09sVHhlWGRmU1M3UFVzNk9KTlZfZmVMck1wb0pRa0gzdTZJWjNQWnBLTlB0TmowWS12YnY0RjQ2UGhJcW1JeDVzcnNtdGxBc3JCX1Q2aGE2MU5id0Rud2o0VFBGQTZqbFdFZGlDS3U1clhnYV9HZ0huWGtGSHNDZ1dTV2E1Q2xHQ1dNRUJ2THNxbnBvVUNPZGNfN09penNSRV94U3Q2TE5rOGJYeFQxQWVBVjlBTUxoamwyTDZNNUUwS1dmQ0RFQTloblpPRjYzRkVaOWtkSXNWZDRZdDByc2dWR1hKOHZpbGoyY1hWakdhRjZDMWVucXY2QU9OazlUc1hSdXVqc2ItRjdBM0tXalV2T0NMbzhMT0JDQlJDaGRINlBSQlJiSmhSRXdGU3AwRnZYRDQ4S0tuUmRlcm1wN3JLYl8zZTlJcjZPWkpKeVFlZzlSN2pOTVhNaUprcFRvVDVkNDZVVWdFeXBtQzlCTFNwY2FjcWZRWElQeVFRakJNWFJrS3gtdWhTbi16RnVQZmsyaVc4NWYzNHJ6dWs1dXFWRkFWR1dWRkdPbllERWEwWHcxTDQ0RVNURThhSTRGdkdJTG1aNUxDSUsxdnZjUU0yZERlS0lteVI4V0tkSzlORlA4V01oek1RSjdxbzIzOWotd2p3M1pzRmFXeWVBbms0UDhWcmd1NThycTJHUC01QTQzMTdmUmxLdFFheTBMbS04cTYwOWV5ZFZZMU10T1lmdWJ3WlNiaXM1Mm10Y2tyN0RaNUo4NENOTnZCTWEwaGtjUWZFU3MtSkk4VEIzUFFYWjNhUzVEODFzYVp1M0l1ZWk4NGZUWlp6RVROcGpLeGRJU045dExCQ05ZZk9WWGNTdUVtdVJ5ejNJc3BxcERCelpTTlFCOWEwcE1ZR2szdFJMVGNhdS15Q2lwazluWlhhVnBzdEE3aWFmSmdBWXlFdHJ2WTY0NXNhS0pGRWxBak4wbG0wV3ZucnZzZUtpS0FoVWkxcVNscEFHd3V5dkJDR05oQVRUVEpFOD0=)
                CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZTVkczblU5SkRfR0NKZlp0OG1ZNDd3QzJVdzlIckNISl9JNjFtckhIeFQ0aXBNUEdhZ1lwM1lVdVRKaTZITGcwemhpSWlqdm9oRXVpd0N3anRhdXF1MDJ5VHc9PQ==)
                CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZTVkczblU5SkRfR0NKZlp0OG1ZNDd3QzJVdzlIckNISl9JNjFtckhIeFQ0aXBNUEdhZ1lwM1lVdVRKaTZITGcwemhpSWlqdm9oRXVpd0N3anRhdXF1MDJ5VHc9PQ==)
                CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZTVkczblU5SkRfR0NKZlp0OG1ZNDd3QzJVdzlIckNISl9JNjFtckhIeFQ0aXBNUEdhZ1lwM1lVdVRKaTZITGcwemhpSWlqdm9oRXVpd0N3anRhdXF1MDJ5VHc9PQ==)
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |  
                echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF
            - name: Build Android Release
              script: |
                # build Android
                cd android
                ./gradlew assembleRelease
            - name: Firebase App Distribution
              script: |
                #!/usr/bin/env sh
                set -e   # exit on first failed command
                set -x   # print all executed commands to the log
                
                # Android Firebase App Distribution CLI

                firebase appdistribution:distribute $FCI_BUILD_DIR/android/app/build/outputs/apk/release/app-release.apk \
                --app 1:940201993799:android:a9039e5b5c34d88754f362 \
                --token "$FIREBASE_TOKEN" \
                --release-notes "Internal Android test release" \
                --groups "cmrnapp-testers"
                
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            email:
                recipients:
                    - kevin@nercode.io
    ios-workflow:
        name: iOS Workflow
        max_build_duration: 120
        instance_type: mac_pro
        environment:
            vars:
                FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmZZT1RfM1VjWTYxNnJKX1NzYVRzUWdVMm9oRFJ5SWVNVFN1eGxXNXh4dlVfbmhBTzY3TmYzLWJxbFY5Vi01MGVvUDFNckF2dk5ITEZFSjA4ZEdYQTZILXctTXp0eHc5dUJfbmIwSHdnb2lnb1hvYWp4d0U5SjdXMGRXbUMtQkJlZ1M2Si04RDhzOXM2bTFDX3B1MDFlZ0FtM05iLUR6Wjd5ZGJzbzNsNmRRQm9GOVgxRFA5REVYWXZiVXgyNklTenZHMHpCVGtuTVRMaHVxdEk2TkNtNDU0NEVvUT09)
                XCODE_WORKSPACE: "codemagicreactnative.xcworkspace"
                XCODE_SCHEME: "codemagicreactnative"
                # CM_CERTIFICATE: Encrypted(Z0FBQUFBQmZNOGlQakdjTTc3VTA2bC15VFhrM2N1VUZJbHBDRUw5VVNqZ3gtckdWZ0x1SkpjOF90czJQUk01UmZ0bk5SNU4xOHJXc0RUZmxTQUc0dVlxY004a0RMUk5IaGM4c3JseHpYVklHaXVpYnZiYTdWOHdfS0V2MFhiZkEzZThkdmo2Rnd3cTA5UEg3YTFHc0xvUTVfd3RVek05cE9qZTd2OVVrTnpmTU13aVk4MlRsM3duczJNZE45RzJiVHNBekZYR2c4a3BwY1JUdVhFUzM1ck16NVRRdUtheV84Z2FoVzZGVjNjaFNyU09MS2xnd3Ezbk5oZmdjOFlDT2ttR25KN2t4X1AtdjJUOWVUQUkyc3RacHhjR3A2aU1sZDdyZUtRZlZGOTBaVVhtVGNYZ0Exc2NzZW5qVmpsWS1QSG9vZUZWVTlZdkROUkhOOWd3dkRxYlJnNUQtSWdaOUo1dTNEU2lVTnVKOUhILUZ4MkZYenFHcHVvM0NmRXdyWERvdTM1S1F0eFZWX1Q2VU4xQXRiVzJRVnlWd0ZKYjllb21UMVdjWkRpQVM0NHZpUlgtUFZYa2RzdTNRZzc1YkFKa1JNR011ai1OWEtxcmFJMG53OXJVYVJWRjRtQWFRSWp4dFEyNHNDY05uZ2tOTzJkWFhjeDhyMXhyU2U4cG5qSG9tcGFyMk9KdkxsckJWdTc1X2JDcHpnQnhrakJ4TG9XZ0FfUlFpNDROeGp1VWNVcldQTzY1VThxbXExcTJ2T2JobWhQR1dnRFhIeUdodEUydWNRM2VxbGdSMG9TaWExNmFHSW41NjNTTFFTQVd1VTg2Y1FNZENTQjYwWU1nMS1hd241dnJZVGJKUlVOWkdzWE84Um5ReDloejNBTkstLWx4MmpyREl3LXFGR1JUV2FkVUZKVWt1ZFljbjZ5UXZsTWV0OHM0SVk1WG1KcGJWVHdvZGRVc3lxb2doUGVZckd3c1ljVGtrYUhiZE1ocVU2aXVZWlRPelprSEg5VGM2eEtnSF9KZkxTYzRFQUxGdm5jNlE5TGZiVzBmTWhIX2ZtWmpWalhnY3ZnRlJsRlZkZERwVGl0M0tMTlJvY0tUY3lPYzdSQTBqMkt0Y1hDUEwyY2d5TnpGS2xCek1vb2xqRVNDYjVhYmRsZzhQZklhSTBnQV8wTWhLVWxSenh6Tnp5Tm1mb3F3azU2QmI1azFOcktpRGtPUURUX1o3RGxuWjJtRDViVVRWSzRhOEpuM0ZxYTN4eFVpZS1jUUN1REdfRjdaeUVXY3NmWG1HYTFfSG9ZYlp0bjl2TWFLRXo2R2hqNUQ4WXpRRldMRThRdlg0S282WnNRN1pSMXI2RUNvUU1BcHJtd0xzZHlQT3hQLV9WUTJieFJIaWNrR2dBX01wNm1jbFJGWEtPcHZXVXM2eklyZDlRUWpHMUhzYk5ESVhGQkJINW1QbVFabWV1QWFWZFNORFpMM3VXaWRSMmRoN3h4SFNRRllXRmZIQVF2X211Y0FmYm14OEpidjYyV051Sk9VWThzQ0d2V0lNWl8wSUtPLUZ6YmpPNmp1UnpDRWF2UGxTTnNUcGJqdERWSmFSZzNNMFYzLTd3RUZHamRON3l4WEdrSE81OEZBOG1Fb1ZoTnRPYmlFM2RKN2F2dzlkUlJ1V1JTRHhxX0szaHVSYjFUc3J1dUFSZ1NHYlZWZEhjM3lOR09MckUwaE9iTFdVeEpYYkdkdmUxZUp0VW1aSlpNU2tmLW5jUm1xcWpWRGM4b2NKd1M5T29BdnNWRlFhLVMwLU15a25JaXF0c3lQd0RwNDlVN1RIa01VUHAxMDliZkI2bmtiOTJTaF9sZmhBTldxc20xa3VTZW45ZlE0OExFVFREWkFzLW9RYmo3MndWalA5QXNtck5lcmVDYmtKZWZmZFBEVGJQa0dwRVpFSHRRYlJxTWE3R0dOWV9RajJ4TUlSR0taLU5JNnNUaExDbEFfVWhXTWFQQUpFaE9nN2xSUnRXNE9salp4RWNXM19OTndtSW1XUEs1TDVDbGwtcUY0cVJYVC0xTHdJOWZCUy1xUWdFMUl0Z0dfeVFHdTdwMV85ZFFERU9IMkJVVWJERDFteU9jVGZubmotREVBd1ZaUWZpRXFjR3M3a1NhWlZTQjdrcjRnajg0ZHJZSjZWcDgxZlFpM2Q3cDEyMzFVblJQeWlBQXRqWXhYcXg1c3RlNkpURXpvRFVUMEEtWmlpZTA2TFBscnhLRG43MFdXZDc3TjI0dTVwX2dRbjg3RWdObkJJNWxTaUp4QTZmMXpvQkptNnNJd01mTXFhSUhYZnJwVzZhV0d3a052S2pvTmVoM0QydU1WSVVHZUxUY3FvX1VHMHN0V2JUMlhSUzNmWFRGeXhXc2hOaDhiSXY4MmFMQ0FCN3ZuWGJaZWZtVm1CV2JHTE9zbDdYMmFjLURJOU5BM0dMdHFrak0xRkxQLUQ1TXRJZGU1NkszUS1TV1B1ei1xUWU0Tkhjd2lpSzZOVW5iZjR0YlY1alJ5WVFSWS1XbF9SZlRGcjhibDJXakFmY2lSTTJ0RHl4VDFDeDViVWVQSjFwRFgtcUs0ZUhIX0NueG9yelVXQVIya20yQUIxNGFnX1oxemx4eTVxR09lUW1LeFJQOTdWSmJONUxkM1Bvbl9EXzl6blNhTTNOczU0a3Vla0pVTzlOSkVuRFFKS3VMb2h5ZWxta2Y0Q2lTNXJTcDZGNThOM0J3SUdmNDMyLUpOSlVxZ040MlluUDhZaFNDcXktQnFDNUdzZThOWm0tZ1BSV0RrbjlScmpYUmFIX0NIMWt0LV96YjFPTURJSHgxUzV2TTFtcUFrQV93RUxpQmVUSk5VMmdZSHBDM1ZIX3VBbktxaFRyT3FHMGkxX21pNTkyRm9hdG0zM1BrdFl5bDdmZmVESUlWYXBscVRVc3c1VWwtMWFTZkRhd1BCb2hVcVh0cXZSdHh4RGVRX19PUWY1emZ0NENzWFZwMmQ2TVdXOGdhOXVwbmlLSXRIUEUxTnBuMkZ2MlFNM1NaSDR0V1FLNGRKblczMlROeUxvZVNjaVo0bjBIOXExX2tmSklZdVJLNlZ0SWtFcjFoVUt4aERHSGJ4N1E4cDk4YTJERFJUVkFheGlWR1dSVWRDRWIybHVjNHMzckxhMllETkpGQUlHbkdoT0xOanhnUXFQcENYUjM1REM2dVAyLV9hZUFIMFhFT2RUb0NBVXR4bG1FemN4RC11WDc2U0hHcGdNVzZnejM4X0thOXFGYkRaMEU2VFZWTXFCU3h3WnRTblBMU0JUd2VaVncxcHVQNnp1a0ZvRm9JR2h3S2stdEtNZUxNZWhWa2x1Zng0QVlwTWd3TTdDQnppRVpMOUgzSDBmdTJMbjhsWC03dUN3R3JXOS1FT2RFVUszb1NJSWdlNjF0RHBpSkZMX1JFTlNMWFRWNWhUTlhIbEdfUW53RTlucTJLVEl4MWx1UjJrUTVMUWxXaWYxdlY2UG5UMkZGa0xablR0bFVYLU9uX0RsYVZTRkYwSzNyRF9UaGt5TUJUNl95eHNqeUVIRnZVOXZjRWM5OTdZZW41Uld3bDIxV3l4WDhQa0F1UUNlOVo3NDVxOXM4dndtajhBQUwzdzBENmRRWjUzRHlTWGhCVDAzUTBad2pqZUE1MG01bW82ek5feGJjM3VVS2JMMDFYZ2p0QkxaX2g5dUpYeE1La0RwSmVheExHb05rd3VGa1BZbWpfSnIzeGJwX3RFbzRNcDNIOEk4M3F3QzZSS2htTjctWlA4d1BxUHdOYzdNXzhoUGVpSUd1SWJNTkNYTkRpNkYxS3R3QVBHa0ZWRTdOZ1RqdXA3eGhwNzI4ZHM5SVBPSXJhRnAtY0Q5R19iWGpTdGhfN0NvTTZIdDZobmlxNkxWdnNRVV9vRm9OdDROQzFrM09YZHZ1Y0dhUXkwVFZuZW9wd1REdFRLbEJQRUdKTmR3d19OZkJKajBST1Z4bThKWXpOY1hkUUk4ZXNhaUJtUl9kNWxzUWlLTFQtcTFocUYzelVyUks0dE5CNFZTUTF6a2dIQTZmNFRaZ25pc2d3U3k5RGgwZm9Xa05MckpvbWRJeWFEWjhSVS1seTdDMlNTT2VQWVZkb01zdjFRT0QzdGJsZkRpS2xwUGtMOEVmWlRjaUFsbUNDMWFQUEFyY0EwXzQ2empTem95eGcwX1ZZR2pNNzlzNW5mdTZVVkVwUnhqd3Rfa2ZYelRod3JFSHd4djgxeGE2eHh0V25oN204bUV5Q2pVWThIcmVUWk42OHM1d3BjYndtYWdtbjBDUDBxcExPZHRzdWE2OS16Zkl4QVlWRklScW43U0Y3bW5MTE9hTTJTdXNiVlNJOFROX0tDTkdWU1JkNDRkLWpnOTNlLUFXcUlVTjJDTTNUdWpnREQ0YTBaakxSZ2MwQm5CdXQ0MmREcE5PT2hldEhfY1d2TWNGa0VKVXRuSHZEQ2owRXhJYXROV3hJQkpNcmJtb21vVDVGY2xEYVZ0Y3ZBUFBmajhzODhLYjE1cGxWVDVacW9lV1FjOEswNXdDdFc4N0V2bWlxalBNMVdWaEliWUZMVTRtTzF0Rkc2dGd5VmZFYlg2VnA1WjFiWEdZVGhRWk5tRllHSTR4QjFMSm1wNldHeHhaNWV0YUlXdWltdXBGb3JSZGpVcEtoTXdOMDYwbThJdE5nRml4ajVreGRLQmNOLWt4ZmJCaE1acHFvTjJYMThtRjFfeTg0aW1MaVNnbVBsVmFWVlV5ek9iSzVLc0tHaW90SzhENS1aRWcxRXMtUkNwZjJrWUM4MExlWlozbk5LU1JmMm9EUDZVbnJueWt3WEtxRmxvWjMtbk9oaWR5dzZVbmItVVh3NFpqaVNRelhmd3NzeVZJckF1T2ZmOTh1a1Q0S3c3bDZUbFUzeVpjSkJBVXl3RC1iUnFzcWhiMlk2VlFsUVM0OEQtWEM1clduOTA3WVdHUFZ6MXlhVlp5RGdPd002Z3gzQlhFamFKb05XQ1ZkbVlUUE9CallTTnE2SjZJZF9zdjZJZ3pRLWd0cERSS3ZLZXg5OVlKYzlfZUJYM3pIZ2JPekdOZHloQzh1UzRhRFpNdFdhNnJmMnphVHhIeW5iSDlVWjZMYTVGWnZaNy1ZLVQyU0xNU3h4NVVtamt6Rk50eU5yZ012Ql9vWkNaVjZqVWFXNlJ0ZGdpaER0Z2o1SmRjUkNoQ2RvY2hFbFB0dnVUNFNqWkFsazNzUXhmNDRoYTFPeUVENUdiaTlaMTBoRmdQZXlTQ1ZlcjRmbHpzTnAydm1menFYR1V1VDE1ZjdlQUdJWHRTU2ljU19Odlo5RXNyV2hYMlhCRmFfMGVGaGpla2Q1TDZLZVBUNGJHZURvbjBtLTFKOU81MjVxVkUydDBVUnBadWc1VS1YQ3ZNVjI4Ri05YXZSNEpUMXlUbkFXN0NqdFFYSmU1N1RRZlJkeXdTckt0RnJ6bV9BTlVmWmtJb2lia1RHS3BsZU5oMmJmMVA4VzZzT1ZmUTlubUNiNFJNeFlfMkpnZ1lSQk1nZExGc0pJcXJQNVN6TlAxMzduZTRGMWgyakM2emZfQXdmSTV3VmFSMVpIblpmc1hUMXdER05mRzFBdUJSYUJtX0hGWW9iOVVQZl91bVNLalJ1S0ZFZmdQZGJfaDFpZ0trUmdkam45RS1FMzlWQXF0cmR1Q3ZaQlhEcHJqLUc2Q3dGVHF4SG5heUFKdllZVjNTaERwMS1YNVdiMGhObFFqbzRFa2FvZ211ejRxcmZKVGpjcjZyUDFzNHBaVnNqVVgxNlhwY3NuYnVGWWtiWGNvb1M2WDlzOHIwX1A5UEc3eG1jNmtsVm92NXAtd0NBRlJGcmxSR3QtVkc0US0zeWhZc1E4LTVlTFQ2OVdicGN4eHl6MTc1MjVja183czdIUUFVZjN3UTZyME9KUm15N2dqWGZHdlBOZHVid0lMY0hTQjdWckxmdU5aZ083MVUyVEhXVWVhNjFJY1pyVUxkM2tQemV2cVVlZTljMEMzZFZybGxoMTQyelpFQ2ZOanY4aTZDSV80M1Vyekw3eVJ5emRic1NNbmZ0cVhBWm5xOElwaGUyS2U5Mmt3QVlKeF81YlRkX3pOdDN6c2N4SG14VTBUWTZGMG55WmlGMEVhNzluY1RRdnJZMy1JRzlBeGc5cUN4V21ZNTZXWmpwemRyMnVibG5zRllWODU2cHRuSElhbmNDMmc3VUNhVlMzS3M2QURMUU1leWYydk9aNU1nLTRFc1h1WV9JM3JvV2ZKekk4eEZJbDg3UEp1WEgzTlE5Z0ZiTGpMUmdmNWFFX3dMMTBNY0w0ZUpQcjBqU2E4UUh4Vm41YkZmSFVzMmc3QnlJSkNFUHFsV0Q5LVJIQ2cxWkgzenJJUlpDV3VvUGZRSGZTRGxURkYwS3RmWHVqa0xINDJoa2x0NkdOQmZHTWZGRS0xWmtselpJVF9QTTZncjVrc05YQWhsa005TG93RFFaTjlqMy1aWGhSVlNXRm0tcXVUSVNJNFZxMmtBbWdxVmVibjhIam5qLVNQcWZ2UFhVR1BnRkF5NGt6WElPOGd4elpoYTZDMVp0OGIwdU53aFRRbkNON2s5dmxLdDVxN3Axd18xbjVoZDhsbExqYWpZOW5PdVlJdGtycmxvQnQ4MzNHX2dfS0FzRUdiU05zZEZJR3gwZXYxWTlZTHROWlJlOFE0QzZWMnlLYTFrOVdWdG5xb2dJMlhKX0lrR0RuSW9rcTZmUWZvdzIzdFRjUDUyV0tJSm1JWVVIRERTUUdfUlpSZ1ZEaDU0VVdIRjZKcDY1QXctWU94eE5WZW1ZNGdJMnJRbVBLNDFvWnRHYlVZZUUzZ3E3dzY4UzJLXzBUZDF4NnFYdVNxNG1mUG1haWgySXAyMWFaT01TblZxNGtjX2JuUDhjRUR5NGVRdk5iNHI5Q0xCM3E5VmZqN3hxQldiak5Ic3RfT3Jlb1FCUnRyeDA5LTZiRzV4aU1mZHVwZ0o4LUdFOE9mcXpURDVWVktwbUl0eW84OV8wX3NyYUx3UnIwMDZ6R2E0NlM5bkw0NFhQRHBYMDk4MHpJMEk2MUJDVHV0RGpBb0RoREZWTjRPTlZGcGpLb0tZWUpVdkVCdzVXSlVOdUZzRUxQd2g0bnFnbmdjME9nNnF5RV9fVHdJOWp1NUlGZUZESUFnUGJnOXgzSmI1bkE4cC1LYXlmSXhkaVVTS2h5VnFOUUFURVdvdUF2bERCWUZLS3g1RWNsNEZqZHNsNXY2VVVOVWgtMTluOFR5LXgtTHMtYnhMRXkwVF9RY0pIeFVRQS1UclQtVkdkRG1hU3BtOF9LeGNqMDlaelNBdm9yT1ZBTWd1QUZJMWpmcDFOVFlRZ3QteXpBZmhSZkJDMUFzV2pDdThOdjdQTHhvSTRGcXVsOVNlSmxSVUhlbnZVMTNOZmRiTnI0MTUtNnREUFJXSUt4SE5yZE1jNUhCWkwxeXVIWFJ4Y0QwRnVKM001bFQ3NlNHT0tCNm40dkZCYWc1OVhKMmw3S3lRU2l4MVJVSGVVWVFNT3NTdmo0ZjdCYkVBeEdreGgtMmxEaGxXVEZKOXN6em5fUlZrblVISkZVRE5qSnNNTWlNNkVsd29PeUNJdUR4U2l6R3FwLVRoSEl1eUNyNVVZbnY5ZmU0)
                # CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmZNOGp2TXRuUmdEZC1XakE1dEl0XzExYXZjSjdDN1dtTnVtYkR6eXV0aVhVYmhPQTY5YlFoUVJ1TTJpUUtRUHpuQ0R4ZEFQNHZvQW5oVDFGaS1vc0NLRkZYemc9PQ==)
                # CM_PROVISIONING_PROFILE: Encrypted()
                APP_STORE_CONNECT_ISSUER_ID: 4b453230-51cb-40b6-bfbb-60e71ddaa13a
                APP_STORE_CONNECT_KEY_IDENTIFIER: LY64D5F898
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZXN0ZQdk15NWhMendrdDV1eVo4S3hBdnJRcjIzanVpV3hQUUdsX29oUG1ERHcwZTZmV052ZG5YbkNtZnNCNGpHZEx0NnF3bTVrb3ZRYzZsRGNxbElOTURzWTJ1MW50VmtZeG1RaVRUZHNQaE5lN0sySFVwLXpTdzMyQ1REMGhSODY3ZG9RbUkwMGFsbWdSdHhyc2FPbXEwRnRZWGJzTVpOSGR4Zmh4dzRHV2RacmxTM3E2Rk5lYkxfVVVrUkhEOFZhLTR3TzdXX1FFdmoxRThtMk9IYWRVcFFNaXl6MWtCSU41ZmF5b0ZlOXg3QXlmSkxfZ2dpQTl4ZGdvckEzd3lkOHpZeVVfZVhieUM3VGRiZ2xWaFRTWExBU1k3bW5GMjRINFdhUEhQbDd1cHJiYmRhYy1wRzdTX0NmajZKMnBWSHU4eThsQ0xiUTRhS01iUVFleEZ3QVA0NDJHY24xNEVVQVMtWlpCXzdVMnJXZlN6NTRZM2tjVllSN3F3X0p4NGtSaVkwbS1KS3NUWVRyUW1vT25iR2doclllMnVjenkzSjFwM1VoaE5yZWVhbDRmOD0=)
                CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZXN0ZQdnFqTnJpWWo2MnpidVlTV2R2NHEyVzFPRUNzZHZSUU5za2liOUlrSElRdTdsMUwtS1EwX3FhLTlIU2F0bUtXVXBtUERxTzRpdGpRbWZYbmlZWktwWTlFYVFCaEluS184cXFwdXBDRl8wdFNvbC1EUTR5dHhfOUlUU2pBSDBfZm5FbHB3OW14WVota0JZQkxid1JxNDdBWUhQX29lZ2JWbmhHTVM1MDBfNGFzX1RFU2JnN012a1A5a1M3Y01UWXZjWlZvdlk5YTlpSC1nZTVHQnBYXy1pbHE4SWhQRFhETXBQdUZCTDF6dGRBQjgzMGo3b1hoVUpma2dDMnVfNlRlMlFNekVaekVZeEp2S1pJcVVON1JjX0ZOekFJZmJTOW5veWlVZzEtaHJtdFRyWnRaZ1MyanZHVmhQRkpSTVQtSko4ampJblQxMm9pUWwtWDhQLXg5T1FpQ2pVNjJYbER0Wm1TLXZFNnRoaGdWaE5IV1RFa0UzR3NWUk5ZZ0lGajlfZ0hjX0JPcm5KOTBOdHFPbEVCbnJPWTYyS1B5aVQ4MUdmbVhMb19zb2JRbWticWJuRkdMQWswYWIxTmNSUUxoNFJvMFFKb0s2WWllYUF6WWluTUtBa2I1R0ZXT0U5dUlRR0xNYnZMQ1YtVTJNS1pjX1RPOXNSZnJFVjVHWmNiRkp3SEk5M1NKekpqaU4yYmFyLTBHa2NEWjNGazM1aFRnQkN0UkwtVlFCRnpuWmlOU0VsYkJxODVvclM3TVE4dVhMZDI0eWtkWFM3ZXFBZS1qQ1NRdWJydmVOcVFmMENqOEN6MVlrbVJHZXdUaVdCR2NTYUwxM00zaEx3MFBPOGtvVG9zN2lmb3ZLOVVRRGswS1c1aWtKOUc4aE9kc05DaXd2aTdpdGl6TWlKWWFRRzRZWFZ0RllBbHAzM1d3d3V5Ti1hZVlaZmZHaGFmWHJtMFpvQXZDUUZEa290eGhIZjc3QVpNcTN0QjRkVDJpZlc0M1dTU2d0bGJ4V29wVm5zb24zN08wQ1Rvemo0dDdFTGRHRG53U3p6LWo3bTltN2g1anpCSGo2U2QwaVhoS1NTV0VNNDJVX0NJeTBuMVRENVJHdmZjZVlibEpodlU3dkZZRG5zck1MNEVBYTVkcmFHRGlVWjd3cTVUMFQ5MGNPN0hCcHIyS3B1TGxHcFRacjE2NFhBUnpoT0Y4SE1PVkpiX1V2cG9VbTFHbEJZb3ZsSjZoRUtBYmEtbTJYMXFaU0tLckI4cTdoWFUtMDA3T090Zm9LQWd0WlUyZEtuRDRFQURjSlBXbng5ZkhrenBIVkJsQ1NWeFRNNXhXU011aFg1SEI5TUNKVExMemFYeW1wcVlZbG41SjZ2aE1QSE9kcXo1T2FJUzZNQXlHdzdaTW8wb0cybWdNVnhGdjNWX0g5R2lkNkpHTDNoWFdFdGRuSjM3WF9vWFc1dDBYSFpuUndJMEJRcHhqNUU2S0pfT1BSWWp2REE0VXVyM2RncEpPR0JBcTFMcmNfeU02aGxIQzhoSzBDN05mQlVieGpCTUMzNmJGQzhQbnYxZ0hvb1kzc25rNWtyVV9qRFBSRmRlVFJGanhDUFBScTBRbFR0cFpDX01LU3dDdmpHNnRRNTQ2UTFOVVZLdDRvX3kwaEU5UW81ckNIWVJEaWRRaWUwdFVYNjhhSTJFYm0td1M1RG1ERHNqdzZMUU9QRllTcV92TnE1MXRqeFQwNktTOTFkcDZWZXpYZkdvSjF4NjhScmxLRXpSd0xyV3NscmdiRmJpZjFsVlpYaGJPVzFUNlk5WnNCUHd2ZnZBeFhJeE0zZFRuaFVxQ3Y0YjFkWGdBZUdWRUhMWG1rdzBOXzN6MGpSaTBrWEhTZ05NU2lNa2RqeDg0OTRiT2M3YjFaVzdSX3FRRFRTUE5obDFJT3lPampkUlVVV0dzOVhoLUF2eXJMcGsxNTZXUU92MGk4TUJITnQ2TmQ5aXBiWUNzX04wLVlVOTVKNnp6azJLdHlwck5nVE5qSmZmX05iNTFiYmE2RmprZm1BREtrVjBoS3oyR1ZDV2RHWFFYY3Njc1g0cUd0Y19CR0lLM1VnY01nZVR1RFI2SXZScnVKR0lYVG1XSUV1LTE0Z3ZkUUlIM0FLYmpodVdCblZDRkVSR1AtM3pIUThvZDE2ZjJpMjVOYWROUkZscl93QjVQWGM1ZXpKYWhTWm02eGM1cms4T2ttYWJBQ2dmVXo1b0t4ZTl3TGI3bEJfSGZUbjE0SUhpMmVTcHdwUFY4ZXlqQURwaEZqQ2pNOHY3RjYxNTRXendCS3RNMUNJbXFqUXlGd3h3SjFRYWg5UExfa2RqUGVqLTJGbWhaOFVWOE9RTTdRa1pYZVZTNllTUV90c1BiUUZUUEMtalFLZ0syRGNFbHNfdXdlSXA5c1pjSWJBZmIyQ1RFNEVrNkxydTU2ZzJEY1l4M2xYLWhvUmRNZXNJNjJGRHFJb1Y2cDBfT29GczhyNDFnZWdsc2t5cF9GTjJFZV93VnF1bVZoOTNxNXNpdF9HNUlLTC1LQkF1TmZvVlFfTExqbXdMTThvd0xQZmxfdU9oZ1RlWmdzRnc0RHhSZHZDbGd6aWdUSjR1WFJzNkpDelYwSDFQZHY1MWZUdEFoZE5TcE9zaS1jTTNObTI4cFd4dTlYa3Ixd1JzN3FUOFVwdy1qd0NtZm1DYnIxX1BtdFpmYzhGTGNtZ0U4TC1UZFRJYTVDS0RteHdIZl9WQ0pjZktCUnhJQm5hRklxWUFJVXdWQ0tVelo4SVhZaUlRNklQRVI2OWxKSGM4Z2xXam5pRndlMEJlRmIySENOY1hLalVXczY4U2ZJMzkzNFhGSlJkMDY3dUwwSlQzZUxBOTB6dEJsbEp2dWhUdU12ZmE0SUZnMDBTel9YSDJSbkVFR2JVZUVnZVlrSy1tOFVQZ3NUeGFhVnVsOE9lWE5YQ0lQaVZmd0R1MjZzMDJ5bVQwbElnZHdjUHRNMmMxYXRUeVU5T2JkRlR4cGhId0tJVEFvTFpUUDE2a3g4d3laS3BSVlVhNXRzVmQ1cDJNNXVqdVpZ)
            node: latest
            xcode: latest
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            # - name: Set up Provisioning profiles from environment variables
            #   script: |
            #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
            #     mkdir -p "$PROFILES_HOME"
            #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
            #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
            #     echo "Saved provisioning profile $PROFILE_PATH"
            - name: 
              script: |
                # app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
                # app-store-connect fetch-signing-files "com.codemagicreactnative" --type IOS_APP_STORE --create
                app-store-connect fetch-signing-files "com.codemagicreactnative" --type IOS_APP_ADHOC --create
            # - name: Set up signing certificate
            #   script: |
            #     echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
            #     keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios
                agvtool new-version -all $(($BUILD_NUMBER + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
            - name: Firebase App Distribution
              script: |
                #!/usr/bin/env sh
                set -e   # exit on first failed command
                set -x   # print all executed commands to the log
                
                # iOS Firebase App Distribution CLI

                firebase appdistribution:distribute $FCI_BUILD_DIR/build/ios/ipa/codemagicreactnative.ipa \
                --app 1:940201993799:ios:05ce72819d61e46254f362 \
                --token "$FIREBASE_TOKEN" \
                --release-notes "Internal iOS test release" \
                --groups "cmrnapp-testers"   
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM          
        # publishing:
        #   app_store_connect:                 
        #       apple_id: suhajda.kevin.ferenc@gmail.com   
        #       password: Encrypted(Z0FBQUFBQmZObUJTLVBLQm1Ea2VVQzcxbnZTNTV1LWhkZU1jSml5WTY3eHB0X3dzSnlmY2xFdFFHRThJZjZCazRuUlIwYVRZMWFoeVBnbWhoWG5GS2hsWVRldHpheVJNV2ZvX1BacDB5SHNlX1ZQWEZxMk1CTXc9)
